{"version":3,"sources":["index.js","hexbin.js","hullLayer.js","stateful-query-string.js"],"names":[],"mappings":"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","file":"holos-init.min.js","sourcesContent":["\"use strict\";\n\nfunction IndexController() {\n\n  var that             = this,\n      recordLimit      = 50000,\n      layers           = {},\n      layerDataCache   = {},\n      rasterCache      = {},\n      layerObjectCache = {},\n      requests         = {},\n      layerFactories   = {\n        \"pointlayer\": function (pages, layer) {\n          var hex = new L.HexbinLayer({\n                  radiusRange : [4,4],\n                  radius: 2,\n                  opacity: 1,\n                  colorRange: [layer.color, layer.color]\n              }).addTo(that.map);\n          hex.data(pages.filter(function(p){return (typeof p.geometry === \"object\" && p.geometry !== null)}).map(function(p) {return p.geometry.coordinates;}));\n\n          var hexGroup = L.featureGroup([hex]).addTo(that.map);\n\n          return hexGroup;\n        },\n        \"hulllayer\": function (features, layer) {\n          var group = new L.MarkerClusterGroup({\n            \"maxClusterRadius\" : 80,\n            \"polygonOptions\" : {\n              \"color\"  : layer.color,\n              \"stroke\" : false,\n              \"opacity\" : 0.7\n            }\n          }),\n          dots;\n\n          features.forEach(function(feature) {\n            if (feature.geometry) {\n              group.addLayer(L.circleMarker([\n                feature.geometry.coordinates[1],\n                feature.geometry.coordinates[0]\n                ],{\n                  \"fillColor\"   : layer.color,\n                  \"fillOpacity\" : 0.5,\n                  \"stroke\"      : false\n                }));\n              }\n          });\n\n          return group;\n        },\n        \"hexlayer\": function (pages, layer) {\n          var hexRadius = +document.querySelector(\"#hexagon-radius\").value;\n          var hex = new L.HexbinLayer({\n                  radiusRange : [Math.max(1,Math.sqrt(hexRadius)-1),hexRadius],\n                  radius: hexRadius,\n                  opacity: 1,\n                  colorRange: [layer.color, layer.color]\n              }).addTo(that.map);\n\n          hex.hexMouseOver(function(d) {\n            var combined = combine(d);\n            that.popup = L.popup({\n                closeButton: false\n              })\n              .setLatLng(that.map.layerPointToLatLng([d.x,d.y]))\n              .setContent(\"\" + combined.length + \" Observations<br/><span style='color: #999;font-size: 0.8em;'>Click to export</span>\")\n              .openOn(that.map);\n          });\n\n          hex.hexMouseOut(function(d) {\n            d3.selectAll(\".leaflet-popup\").style(\"display\", \"none\");\n          });\n\n          hex.hexClick(function(d) {\n            var w = window.open('', 'wnd');\n            w.document.body.innerHTML = \"<pre>\" + d3.csv.format(combine(d)) + \"</pre>\";\n          });\n\n          hex.data(pages.filter(function(p){return (typeof p.geometry === \"object\" && p.geometry !== null)}).map(function(p) {\n            p[0] = p.geometry.coordinates[0];\n            p[1] = p.geometry.coordinates[1];\n            return p;\n          }));\n\n          var hexGroup = L.featureGroup([hex]).addTo(that.map);\n\n          function combine(d) {\n            var i = d.i;\n            var j = d.j;\n\n            var combined = [];\n\n            that.map.eachLayer(function(layer) {\n              if (layer.__sHexLayer === true) {\n                var hexdata = layer.getLayers()[0].hexagons.filter(function(d) {\n                  return (d.i == i && d.j == j);\n                }).data();\n                combined = combined.concat(hexdata[0]);\n              }\n            });\n\n            var data = combined.filter(function(p) {\n              // why is this necessary?\n              return !!p;\n            }).map(function(p) {\n              var ret = p.d.properties;\n              ret.long = p.d.geometry.coordinates[0];\n              ret.lat = p.d.geometry.coordinates[1];\n              return ret;\n            });\n\n            return data;\n          };\n\n          hexGroup.__sHexLayer = true;\n\n          return hexGroup;\n        },\n        \"raster\" : function (pages, layer) {\n\n          rasterLayers.push(L.tileLayer(layer.uri, {\n            transparent: true,\n            unloadInvisibleTiles: true\n          }));\n\n          rasterLayers[rasterLayers.length-1].addTo(that.map);\n\n          return rasterLayers[rasterLayers.length-1];\n\n        }\n      },\n      rasterLayers = [],\n      startingMenuState = {},\n      layerMenu, shareButtonElement, ecoEngineClient;\n\n  //\n  // Convenience methods for browsers\n  //\n  that.utils = STPX.browsersugar.mix({});\n\n  //\n  // Initialize leaflet and related plugins\n  //\n  function initMap() {\n\n    var selectNode;\n\n    // create a map in the \"map\" div, set the view to a given place and zoom\n    that.map = L.map(\"map\", {\n      \"minZoom\" : 2,\n      \"maxZoom\" : 17,\n      \"scrollWheelZoom\" : false\n    }).setView([37.5333, -77.4667], 2);\n\n    window.STMN.map = that.map;\n    window.STMN.layers = layers;\n\n    (new L.Hash(that.map));\n\n    //\n    // Add base-layer\n    //\n    rasterLayers.push(L.tileLayer(document.querySelector(\"#layer-select\").value, {\n      attribution: \"&copy; <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }))\n    rasterLayers[rasterLayers.length-1].addTo(that.map);\n\n    rasterCache[\"baselayer\"] = document.querySelector(\"#layer-select\").value;\n    layers[\"baselayer\"] = document.querySelector(\"#layer-select\").value;\n\n    //\n    // Set up map state\n    //\n    if (startingMenuState.d) {\n      for (var i in startingMenuState.d) {\n        if (startingMenuState.d.hasOwnProperty(i) && startingMenuState.d[i].length) {\n          selectNode = document.querySelector(\"#\" + i);\n\n          if (selectNode) {\n            buildLayer({\n              \"list\" : \"raster\",\n              \"id\"   : selectNode.getAttribute(\"data-id\"),\n              \"uri\"  : startingMenuState.d[i]\n            });\n          }\n        }\n      }\n    }\n\n    that.layerMenu.on(\"orderChanged\", function(e) {\n\n      //\n      // Each layer might need to redraw\n      //\n      e.caller.order.forEach(function(layerItem) {\n        layerObjectCache[layerItem.id] = layerItem;\n        showLayer(layerItem);\n      });\n\n      that.on(\"showLayer\", function() {\n\n        updateDisplayOrder(that.layerMenu.getLayerOrder());\n\n      });\n\n      //\n      // Restack\n      //\n      updateDisplayOrder(e.caller.order);\n\n      updateURLState();\n    });\n\n    that.layerMenu.on(\"layerRemoved\", function(e) {\n\n      that.map.removeLayer(layers[e.caller]);\n      delete layers[e.caller];\n      delete layerDataCache[e.caller];\n      delete layerObjectCache[e.caller];\n\n      updateURLState();\n\n    });\n\n    that.layerMenu.on(\"color-change\", function(e) {\n\n      layerObjectCache[layerObject.id] = e.caller;\n\n      //\n      // Color change handler for point and hexagon layers\n      //\n      if (e.caller.list === \"pointlayer\" || e.caller.list === \"hexlayer\") {\n        layers[e.caller.id].getLayers()[0].options.colorRange = [e.caller.color, e.caller.color];\n        layers[e.caller.id].getLayers()[0].colorScale().range([e.caller.color, e.caller.color]);\n        layers[e.caller.id].getLayers()[0]._redraw();\n      }\n\n      //\n      // Color change handler for Convex Hull layers\n      //\n      if (e.caller.list === \"hulllayer\") {\n\n        layers[e.caller.id]._featureGroup.getLayers().forEach(function(layer) {\n\n          var innerMarker;\n\n          if (layer._icon) {\n            innerMarker = layer._icon.querySelector(\".innerMarker\");\n\n            if (innerMarker) {\n              innerMarker.style.backgroundColor = e.caller.color;\n            }\n          }\n\n          if (layer._group) { //A layer group\n            layer._group.getLayers().forEach(function(subLayer) {\n\n              if (subLayer._path || subLayer._radius) { //a polygon\n\n                subLayer.setStyle({\n                  \"color\" : e.caller.color,\n                  \"fillColor\" : e.caller.color\n                });\n              }\n\n            });\n          }\n        });\n      }\n\n      that.utils.debounce(updateURLState, 10000)();\n\n    });\n\n    //\n    // Hexagon radius slider\n    //\n    document.querySelector(\"#hexagon-radius\").addEventListener(\"change\", function(e) {\n      document.querySelector(\"label[for=hexagon-radius]\").innerHTML = \"Radius \" + document.querySelector(\"#hexagon-radius\").value + \"px\";\n      that.map.eachLayer(function(layer) {\n\n        if (layer.__sHexLayer === true) {\n          layer.getLayers()[0].options.radius = +e.target.value;\n          layer.getLayers()[0].options.radiusRange = [Math.max(1,Math.sqrt(+e.target.value)-1), +e.target.value];\n          var data = layer.getLayers()[0]._data;\n          layer.getLayers()[0].initialize(layer.options);\n          layer.getLayers()[0].data(data);\n        }\n\n      });\n\n      updateURLState();\n    });\n\n    document.querySelector(\"label[for=hexagon-radius]\").innerHTML = \"Radius \" + document.querySelector(\"#hexagon-radius\").value + \"px\";\n\n  }\n\n  //\n  // Restack leaflet layers to match the\n  // legend layer menu order\n  //\n  function updateDisplayOrder(order) {\n\n    order.forEach(function(layer, i) {\n\n      if (layers[layer.id] && layers[layer.id].setZIndex) {\n        layers[layer.id].setZIndex(i+1);\n      }\n\n    });\n  }\n\n  //\n  // Turn the loading state of layer menu\n  // on\n  //\n  function showMenuItemLoadState(layer) {\n\n    var layerNode = layerMenu.getLayerNode(layer);\n\n    layerNode.classList.add(\"progress\");\n\n    that.utils.append(layerNode, \"<div class=\\\"loaderwrapper\\\"><div id=\\\"floatingCirclesG\\\" class=\\\"loading\\\"><div class=\\\"f_circleG\\\" id=\\\"frotateG_01\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_02\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_03\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_04\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_05\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_06\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_07\\\"></div><div class=\\\"f_circleG\\\" id=\\\"frotateG_08\\\"></div></div></div>\");\n  }\n\n  //\n  // Turn the loading state of layer menu\n  // off\n  //\n  function hideMenuItemLoadState(layer) {\n    var layerNode   = layerMenu.getLayerNode(layer),\n        loadingNode = layerNode.querySelector(\".loaderwrapper\");\n\n    layerNode.classList.remove(\"progress\");\n\n    if (loadingNode) {\n      loadingNode.parentNode.removeChild(loadingNode);\n    }\n  }\n\n  //\n  // Clear all data layers\n  //\n  function clearLayers() {\n\n    that.map.eachLayer(function(layer) {\n\n      //\n      // Clear everything but rasters\n      //\n      if (typeof layer.getTileUrl !== \"function\") {\n        that.map.removeLayer(layer);\n      }\n\n    });\n\n    layers = {};\n  }\n\n  //\n  // Update the state saved to the URL\n  //\n  function updateURLState() {\n    var menuState = layerMenu.getMenuState(),\n        fullState = {};\n\n    menuState = menuState.map(function(layer) {\n\n      delete layer.element;\n\n      layer.uri = layer.uri.replace(/%22/g,\"'\");\n\n      return layer;\n\n    });\n\n    fullState[\"m\"] = menuState; //Data layers\n    fullState[\"d\"] = layerMenu.getDropdownState(); //Raster layers\n    fullState[\"r\"] = document.querySelector(\"#hexagon-radius\").value; //Radius slider\n\n    that.statefulQueryString.set(\"state\", encodeURIComponent(LZString.compressToBase64(JSON.stringify(fullState))));\n  }\n\n  //\n  // The following methods take a layer config\n  //\n  function _buildLayer(layerObject) {\n\n    var menuState = layerMenu.getMenuState();\n\n    showMenuItemLoadState(layerObject);\n    that.showLayer(layerObject, function() {\n      hideMenuItemLoadState(layerObject);\n    }); //Passing a layer object\n\n    updateURLState();\n  }\n\n  function buildLayer(layerObject, pages) {\n\n    if (!layerObjectCache[layerObject.id]) {\n      layerObjectCache[layerObject.id] = layerObject;\n    }\n\n    if (layerObjectCache[layerObject.id] && pages || layerObjectCache[layerObject.id].list === \"raster\") {\n\n      //\n      // Don't proceed if this is a cached raster\n      //\n      if (!layerObjectCache[layerObject.id].list === \"raster\" || (!rasterCache[layerObject.id] || rasterCache[layerObject.id] !== layerObject.uri)) {\n\n        //\n        // Cache this raster layer\n        //\n        if (layerObjectCache[layerObject.id].list === \"raster\") {\n          rasterCache[layerObject.id] = layerObjectCache[layerObject.id].uri;\n        }\n\n        //\n        // Clear out data layers\n        //\n        if (layers[layerObject.id]) {\n          that.map.removeLayer(layers[layerObject.id]);\n          delete layers[layerObject.id];\n        }\n\n        if (!layers[layerObject.id]) {\n\n          layers[layerObject.id]               = layerFactories[layerObjectCache[layerObject.id].list](pages, layerObjectCache[layerObject.id]);\n          layers[layerObject.id].__sOriginURI  = layerObjectCache[layerObject.id].uri;\n          layers[layerObject.id].__sOriginList = layerObjectCache[layerObject.id].list;\n\n          that.map.addLayer(layers[layerObject.id]);\n        }\n\n      }\n\n    }\n\n  }\n\n  //\n  // Set up the legend layer menu and associated events\n  //\n  function initLayerMenu() {\n    var layerMinNode         = document.querySelector(\"#legend-layer-menu-min\"),\n        layerPanelClose      = document.querySelector(\"#legend-layer-menu .close-button\"),\n        uriSegmentRegEx      = /\"uri\":\"([^\"]+)\"/,\n        menuStateStringParts = [];\n\n    //\n    // The menu state taken from the URL might be corrupted. Lets try to make it\n    // an object and set it as null if it fails\n    //\n\n    try {\n      startingMenuState = JSON.parse(decodeURIComponent(LZString.decompressFromBase64(that.statefulQueryString.get(\"state\"))));\n    } catch (err) {\n      //Really nothing to do. It's no big deal if this doesn't work\n    }\n\n    layerMenu = new STMN.LegendLayerMenu(\"#legend-layer-menu\", {\n      \"menuState\" : startingMenuState.m,\n      \"dropdownState\" : startingMenuState.d\n    });\n    that.layerMenu = layerMenu;\n\n    //\n    // Set up hex radius\n    //\n    if (startingMenuState.r) {\n      document.querySelector(\"#hexagon-radius\").value = startingMenuState.r;\n    }\n\n    //\n    // Add layers to the map if there are any\n    //\n    if (startingMenuState && !startingMenuState.m) {\n      startingMenuState.m = layerMenu.getMenuState(); //This has more data attached to it after being passed through the constructor\n    }\n\n    if (startingMenuState.m) {\n      startingMenuState.m.forEach(function(layer) {\n        showMenuItemLoadState(layer);\n        that.showLayer(layer, function() {\n          hideMenuItemLoadState(layer);\n        }); //Passing a layer object\n      });\n    }\n\n    layerMenu.on(\"layerUpdated\", function (e) {\n\n      //\n      // If the URI has changed, update the layer\n      //\n      if (e.caller.updatedProperties.indexOf(\"uri\") > -1) {\n        hideLayer(e.caller.layerObject.id, e.caller.layerObject.list);\n        delete layerDataCache[e.caller.layerObject.id];\n        _buildLayer(e.caller.layerObject);\n      }\n\n    });\n\n    //\n    // when a layer is added, put it on the map\n    //\n    layerMenu.on(\"layerAdded\", function (e) {\n\n      _buildLayer(e.caller);\n\n    });\n\n    //\n    // When a layer is clicked\n    //\n    layerMenu.on(\"layer-click\", function(e) {\n\n      var loaderWrapper = that.utils.parentHasClass(e.caller.event.target, \"loaderwrapper\", 3);\n\n      //\n      // Clicking on loader\n      //\n      if (loaderWrapper) {\n        layerMenu.showLayerError(e.caller.layerObject.id, \"This layer was canceled before it's data had loaded completely\");\n        requests[e.caller.layerObject.id].forEach(function() {\n          ecoEngineClient.stopRecursiveRequest(requests[e.caller.layerObject.id][0].id);\n        });\n      }\n\n    });\n\n    //\n    // In mobile view there is a button to open the layermenu\n    // this opens it\n    //\n    layerMinNode.addEventListener(\"click\", function(e) {\n\n      if (!layerMenu.rootNode.classList.contains(\"open\")) {\n        layerMenu.rootNode.classList.add(\"open\");\n      } else {\n        layerMenu.rootNode.classList.remove(\"open\");\n      }\n\n    }, false);\n\n    //\n    // In mobile view there is a button to open the layermenu\n    // this closes it\n    //\n    layerPanelClose.addEventListener(\"click\", function(e) {\n\n      layerMenu.rootNode.classList.remove(\"open\");\n\n    }, false);\n\n  }\n\n  function initStatefulQuerystring() {\n\n    that.statefulQueryString = new STMN.StatefulQueryString();\n\n  }\n\n  function initShareButton() {\n\n    shareButtonElement = layerMenu.rootNode.querySelector(\".ecoengine-compare .share-button\");\n\n    if (shareButtonElement) {\n\n      shareButtonElement.addEventListener(\"click\", function() {\n\n        var xmlhttp = new XMLHttpRequest();\n\n        xmlhttp.open(\"POST\",\"https://www.googleapis.com/urlshortener/v1/url\",true);\n        xmlhttp.setRequestHeader(\"Content-type\",\"application/json\");\n\n        xmlhttp.onreadystatechange = function() {\n\n          if (xmlhttp.readyState==4 && xmlhttp.status==200) {\n\n            swal({\n              \"title\"              : \"Here is your share link\",\n              \"text\"               : (JSON.parse(xmlhttp.responseText)).id,\n              \"confirmButtonText\"  : \"All done\",\n              \"confirmButtonColor\" : \"rgb(103,171,236)\",\n              \"closeOnConfirm\"     : true,\n              \"customClass\"        : \"modal-share\"\n            });\n\n            setTimeout(function() {\n\n              var sweetAlert = document.querySelector(\".sweet-alert\");\n\n              if (sweetAlert) {\n                sweetAlert.removeAttribute(\"tabIndex\");\n              }\n\n            }, 100);\n\n          } else {\n\n            swal(\"Here's the thing\", \"We were not able to create a short URL. Please check your connection and try again in a few minutes.\", \"error\");\n\n          }\n        };\n\n        xmlhttp.send(\"{\\\"longUrl\\\": \\\"\" + location.href + \"\\\"}\");\n\n      }, false);\n\n    }\n\n  }\n\n  function showLayer(layerObject, callback) {\n\n    //\n    // Make an eco engine client\n    //\n    if (!ecoEngineClient) {\n      ecoEngineClient = new STMN.EcoengineClient();\n    }\n\n    //\n    // At this time we will only fetch a layer once per page load\n    // for that reason we can assume that if we have data for a layer\n    // we can use it. One could force an update by deleting the\n    // cache entry for a layer\n    //\n\n    if (layerDataCache[layerObject.id] || layerObject.list === \"raster\") {\n\n      buildLayer(layerObject, layerDataCache[layerObject.id]);\n\n    } else {\n\n      requests[layerObject.id] = ecoEngineClient.requestRecursive(layerObject.uri.replace(/'/g,'\"'),\n      function(err, pages) { //Done\n\n        if (err && err.status !==0 /* aborted */) {\n          layerMenu.showLayerError(layerObject.id, \"There was an error communicating with the server\");\n        }\n\n        if (pages && !pages.length) {\n          layerMenu.showLayerError(layerObject.id, \"This query returned 0 records.\");\n        } else {\n          layerDataCache[layerObject.id] = pages;\n          buildLayer(layerObject, pages);\n        }\n\n        that.fire(\"showLayer\");\n\n        if (typeof callback === \"function\") {\n          callback();\n        }\n      },\n      function(err, pages) { //Progress\n\n        layerDataCache[layerObject.id] = pages;\n        buildLayer(layerObject, pages);\n\n        if (pages.length >= recordLimit) {\n          ecoEngineClient.stopRecursiveRequest(requests[layerObject.id].id);\n\n          layerMenu.showLayerError(layerObject.id, \"A layer has reached the maximum number of records (\" + recordLimit + \") and has been stopped.\");\n        }\n\n        that.fire(\"showLayerProgress\");\n      });\n\n    }\n\n  }\n\n  function hideLayer(id, list) {\n\n    that.map.removeLayer(layers[id]);\n\n    that.fire(\"showLayer\", {\n      layer : layers[id]\n    });\n\n  }\n\n  function init() {\n    initStatefulQuerystring();\n    initLayerMenu();\n    initMap();\n    initShareButton();\n  }\n\n  //\n  // Public interface\n  //\n  that.showLayer = showLayer;\n  that.hideLayer = hideLayer;\n  that.showMenuItemLoadState = showMenuItemLoadState;\n  that.hideMenuItemLoadState = hideMenuItemLoadState;\n\n  //\n  // Init\n  //\n  init();\n\n  return that;\n\n}\n\n(new (STPX.samesies.extend(IndexController))());\n","(function() {\n\nd3.hexbin = function() {\n  var width = 1,\n      height = 1,\n      r,\n      x = d3_hexbinX,\n      y = d3_hexbinY,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {};\n\n    points.forEach(function(point, i) {\n      var py = y.call(hexbin, point, i) / dy, pj = Math.round(py),\n          px = x.call(hexbin, point, i) / dx - (pj & 1 ? .5 : 0), pi = Math.round(px),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point); else {\n        bin = binsById[id] = [point];\n        bin.i = pi;\n        bin.j = pj;\n        bin.x = (pi + (pj & 1 ? 1 / 2 : 0)) * dx;\n        bin.y = pj * dy;\n      }\n    });\n\n    return d3.values(binsById);\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return d3_hexbinAngles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.x = function(_) {\n    if (!arguments.length) return x;\n    x = _;\n    return hexbin;\n  };\n\n  hexbin.y = function(_) {\n    if (!arguments.length) return y;\n    y = _;\n    return hexbin;\n  };\n\n  hexbin.hexagon = function(radius) {\n    if (arguments.length < 1) radius = r;\n    return \"m\" + hexagon(radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [];\n    for (var y = 0, odd = false, j = 0; y < height + r; y += dy, odd = !odd, ++j) {\n      for (var x = odd ? dx / 2 : 0, i = 0; x < width + dx / 2; x += dx, ++i) {\n        var center = [x, y];\n        center.i = i;\n        center.j = j;\n        centers.push(center);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.size = function(_) {\n    if (!arguments.length) return [width, height];\n    width = +_[0], height = +_[1];\n    return hexbin;\n  };\n\n  hexbin.radius = function(_) {\n    if (!arguments.length) return r;\n    r = +_;\n    dx = r * 2 * Math.sin(Math.PI / 3);\n    dy = r * 1.5;\n    return hexbin;\n  };\n\n  return hexbin.radius(1);\n};\n\nvar d3_hexbinAngles = d3.range(0, 2 * Math.PI, Math.PI / 3),\n    d3_hexbinX = function(d) { return d[0]; },\n    d3_hexbinY = function(d) { return d[1]; };\n\n})();\n","(function () {\n  \"use strict\";\n\n  var group;\n\n  function hullLayer(features, options) {\n\n    group = new L.MarkerClusterGroup({\n      \"sColor\" : options.color,\n      spiderfyDistanceMultiplier: 0\n    });\n\n    features.forEach(function(feature) {\n      if (feature.geometry) {\n        group.addLayer(L.marker([\n          feature.geometry.coordinates[1],\n          feature.geometry.coordinates[0]\n          ],{\n            \"icon\" : L.divIcon({className: \"point-feature-icon point-feature-icon-\" + options.color})\n          }));\n        }\n    });\n\n    return group;\n\n  }\n\n  //\n  // Make available to STMN namespace\n  //\n  if (typeof window.STMN !== \"object\") {\n    window.STMN = {};\n  }\n\n  window.STMN.hullLayer = hullLayer;\n\n  //\n  // Make available to CommonJS\n  //\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = STMN.hullLayer;\n\n  // Make available to AMD module\n  } else if (typeof define === \"function\" && define.amd) {\n    define(STMN.hullLayer);\n  }\n}());\n","//\n// Stateful QueryString\n//\n// This module syncs an object and events with the browser location\n// serch (query string) section.\n//\n// !!So far I have not needed this for a\n// single page app so it only reads the query string once on load!!\n//\n// Requires:\n//  * https://github.com/sindresorhus/query-string\n//  * https://github.com/standardpixel/samesies\n//\n\n(function(history) {\n  \"use strict\";\n\n  function StatefulQueryString() {\n\n    var that = this,\n        cacheQueryString;\n\n    function init() {\n\n      //\n      // Populate data object with starting state\n      // of URL\n      //\n      cacheQueryString = queryString.parse(location.search);\n\n      //\n      // Set each property to the module data object\n      //\n      that.set(cacheQueryString);\n\n      //\n      // Set up data listener\n      //\n      that.on(\"set\", function(e) {\n        history.pushState({}, document.title, \"?state=\" + e.caller.data.state);\n      });\n\n    }\n\n    //\n    // Go for it!\n    //\n    if (history) {\n\n      init();\n\n    } else { //History API is not supported\n      return null;\n    }\n\n  }\n\n  //\n  // Make available to STMN namespace\n  //\n  if (typeof window.STMN !== \"object\") {\n    window.STMN = {};\n  }\n\n  //\n  // Set the constructor to the STMN namespace\n  //\n  window.STMN.StatefulQueryString = STPX.samesies.extend(StatefulQueryString);\n\n  //\n  // Make available to CommonJS\n  //\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    module.exports = STMN.StatefulQueryString;\n\n  // Make available to AMD module\n  } else if (typeof define === \"function\" && define.amd) {\n    define([\"samesies\", \"query-string\"], STMN.StatefulQueryString);\n  }\n\n}(window.history));\n"],"sourceRoot":"/source/"}